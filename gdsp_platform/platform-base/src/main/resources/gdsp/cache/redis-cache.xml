<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
		default-lazy-init="true">
	
	<!-- turn on declarative caching -->
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
    <cache:annotation-driven />
    
    <context:property-placeholder ignore-unresolvable="true" location="classpath:gdsp/cache/redis.properties"/>
    
    <!-- jedis 连接池配置-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxTotal"     value="${redis.pool.maxActive}" />  
		<property name="maxIdle"       value="${redis.pool.maxIdle}" />  
		<property name="maxWaitMillis"       value="${redis.pool.maxWait}" />  
		<property name="testOnBorrow"  value="${redis.pool.testOnBorrow}" />  
	</bean>  
	
    <bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<constructor-arg ref="redisSentinelConfiguration"/>
    	<property name="usePool" value="true"/>
    	<property name="poolConfig" ref="jedisPoolConfig"/>    	 
    </bean>
    
    <!-- Redis集群管理 -->
    <bean id="redisSentinelConfiguration"
         class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
         <property name="master">
             <bean class="org.springframework.data.redis.connection.RedisNode">
                 <property name="name" value="${redis.sentinel.masterName}"></property>
             </bean>
         </property>
         <property name="sentinels">
             <set>
                 <bean class="org.springframework.data.redis.connection.RedisNode">
	                 <constructor-arg index="0" value="${redis.hostName}" />
                     <constructor-arg index="1" value="${redis.port}" />                    
                 </bean>
             </set>
         </property>
     </bean>

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	<property name="connectionFactory" ref="jedisConnectionFactory"></property>
	</bean>
	
    <!-- declare Redis Cache Manager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
    	<constructor-arg index="0" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.defaultExpiration:0}"/>
		<property name="expires">
			<map>
				<entry key="passwordRetryCache" value="600"/>
				<entry key="authorizationCache" value="3600"/>
				<entry key="authenticationCache" value="3600"/>
				<entry key="shiro-activeSessionCache" value="3600"/>
				<entry key="code-cache" value="3600"/>
			</map>
		</property>
    </bean>
</beans>