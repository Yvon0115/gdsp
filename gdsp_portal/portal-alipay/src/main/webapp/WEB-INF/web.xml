<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
		 id="WebApp_ID" version="2.5">
	<display-name>gdsp</display-name>
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>development</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>server.root</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:gdsp/spring/**/*.xml
		</param-value>
	</context-param>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>gdsp</web-resource-name>
			<url-pattern>/*</url-pattern>
			<http-method>PUT</http-method>
			<!--<http-method>DELETE</http-method>-->
			<http-method>HEAD</http-method>
			<http-method>OPTIONS</http-method>
			<http-method>TRACE</http-method>
		</web-resource-collection>
		<auth-constraint>
		</auth-constraint>
	</security-constraint>
	<!-- 开启spring功能 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.gdsp.dev.web.servlet.InitContextListener</listener-class>
	</listener>
	<!-- 防止内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- listener> <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
		</listener -->
	<listener>
		<listener-class>com.gdsp.portal.alipay.helper.filter.SessionTimeOutListener</listener-class>
	</listener>

	<!-- 如果session-timeout元素的值为零或负数，则表示会话将永远不会超时，默认设置为30分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
    
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter> 
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- spring session -->
	<filter>
          <filter-name>springSessionRepositoryFilter</filter-name>
          <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
     </filter> 
     <filter-mapping>
          <filter-name>springSessionRepositoryFilter</filter-name>
          <url-pattern>/*</url-pattern>
          <dispatcher>REQUEST</dispatcher>
          <dispatcher>ERROR</dispatcher>
     </filter-mapping>

	<!-- 登录前置拦截 -->
	<filter>
		<filter-name>RequestParamHandleFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>RequestParamHandleFilter</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>RequestParamHandleFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- 阿里单点登录cap过滤器 -->
	<filter>
		<filter-name>customFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>capExternalLoginFilter4CommonWeb</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>customFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- url拦截 -->
	<filter>
		<filter-name>UrlVerifyCustFilter</filter-name>
		<filter-class>com.gdsp.portal.alipay.helper.filter.UrlVerifyCustFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>UrlVerifyCustFilter</filter-name>
		<url-pattern>*.d</url-pattern>
	</filter-mapping>
	
	<!-- 验证码过滤器需要放到Shiro之后 因为Shiro将包装HttpSession 如果不, 可能造成两次的sesison id 不一样 -->
    <!-- <filter>
        <filter-name>JCaptchaFilter</filter-name>
        <filter-class>com.gdsp.dev.web.security.jcaptcha.JCaptchaFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>JCaptchaFilter</filter-name>
        <url-pattern>/jcaptcha.jpg</url-pattern>
    </filter-mapping> -->
	<filter>
		<filter-name>logoutFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>LogoutFilter4CommenWeb</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>logoutFilter</filter-name>
		<url-pattern>/logout.d</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:gdsp/mvc/mvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>*.d</url-pattern>
	</servlet-mapping>
	<!--servlet>
         <servlet-name>dubbo</servlet-name>
         <servlet-class>com.alibaba.dubbo.remoting.http.servlet.DispatcherServlet</servlet-class>
         <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
         <servlet-name>dubbo</servlet-name>
         <url-pattern>*.ds</url-pattern>
	</servlet-mapping-->
	<!--客户端请求的网页不存在  -->
	<error-page>
		<error-code>404</error-code>
		<location>/404.d</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/500.d</location>
	</error-page>
	<welcome-file-list>
		<welcome-file>gdsp/navigation.d</welcome-file>
		<welcome-file>gdsp/index.html</welcome-file>
		<welcome-file>gdspindex.htm</welcome-file>
	</welcome-file-list>
</web-app>